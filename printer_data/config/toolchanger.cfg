[toolchanger]


[tool T0]  # BlockOne
tool_number: 0
extruder: extruder
#fan: fan
#offset: 0,0,0
pickup_gcode:
  G28
  G1 X550 Y400 Z5 F6000
dropoff_gcode:
  G1 X550 Y400 Z50 F6000

#extruder: extruder
#detection_pin: et0:PB6
#fan: T0_partfan
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0
# Position with the toolhead aligned with the dock
params_park_x: 0.0
params_park_y: -7.7
params_park_z: 349.5


[tool T1]  # SwitchFly filament 1
tool_number: 1
extruder: extruder
#fan: fan
#offset: 0,0,0
pickup_gcode:
  G28
  G1 X550 Y400 Z5 F6000
  {% if printer['gcode_macro SET_SERVO_ANGLE'] is defined %}
    SET_SERVO_ANGLE ANGLE=0
    G4 P1000
  {% else %}
    { action_raise_error("SET_SERVO_ANGLE not defined") }
  {% endif %}
dropoff_gcode:
  G1 X550 Y400 Z50 F6000

#extruder: extruder
#detection_pin: et0:PB6
#fan: T0_partfan
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0
# Position with the toolhead aligned with the dock
params_park_x: 0.0
params_park_y: -7.7
params_park_z: 349.5

[tool T2]  # SwitchFly filament 2
tool_number: 2
extruder: extruder
#fan: fan
#offset: 0,0,0
pickup_gcode:
  G28
  G1 X550 Y400 Z5 F6000
  {% if printer['gcode_macro SET_SERVO_ANGLE'] is defined %}
    SET_SERVO_ANGLE ANGLE=180
    G4 P1000
  {% else %}
    { action_raise_error("SET_SERVO_ANGLE not defined") }
  {% endif %}
dropoff_gcode:
  G1 X550 Y400 Z50 F6000

[tool T3]  # Laser
tool_number: 3
#extruder: none
#fan: none
#offset: 0,0,2
pickup_gcode:
  G28
  G1 X550 Y400 Z5 F6000
  {% if printer['gcode_macro SET_SERVO_ANGLE'] is defined %}
    SET_SERVO_ANGLE ANGLE=0
    G4 P1000
  {% else %}
    { action_raise_error("SET_SERVO_ANGLE not defined") }
  {% endif %}
dropoff_gcode:
  G1 X550 Y400 Z50 F6000
  {% if printer['gcode_macro SET_SERVO_ANGLE'] is defined %}
    SET_SERVO_ANGLE ANGLE=180
  {% endif %}

[gcode_macro SWAP_TOOL]
description: Guided tool swap with MOSFET-controlled thermistor switching
variable_current_tool: 0
gcode:
  {% set new_tool = params.TOOL|int %}
  {% set park_x = printer["gcode_macro variables"].tool_swap_park_x|float %}
  {% set park_y = printer["gcode_macro variables"].tool_swap_park_y|float %}
  {% set park_z = printer["gcode_macro variables"].tool_swap_park_z|float %}

  # Step 1: Save state and turn off heaters/fan
  SAVE_GCODE_STATE NAME=tool_swap_state
  M104 S0
  M140 S0
  M106 S0
  RESPOND MSG="Heaters and fan turned off. Waiting for cooldown..."

  # Step 2: Wait for safe temperature
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=40
  TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=40

  # Step 3: Park toolhead
  G90
  G1 Z{park_z} F3000
  G1 X{park_x} Y{park_y} F6000
  RESPOND MSG="Toolhead parked at X{park_x} Y{park_y} Z{park_z}"

  # Step 4: Power down components for current tool
  {% if printer["gcode_macro SWAP_TOOL"].current_tool != 0 %}
    SET_PIN PIN=tool{printer["gcode_macro SWAP_TOOL"].current_tool}_stepper_enable VALUE=0
    SET_PIN PIN=tool{printer["gcode_macro SWAP_TOOL"].current_tool}_heater_pin VALUE=0
    SET_PIN PIN=tool{printer["gcode_macro SWAP_TOOL"].current_tool}_probe_pin VALUE=0
    RESPOND MSG="Current tool components powered down."
  {% endif %}

  # Step 5: Switch to dummy thermistor via MOSFET
  SET_PIN PIN=thermistor_switch VALUE=0  ; RPi GPIO18 off, MOSFET switches to dummy thermistor
  RESPOND MSG="Switched to dummy thermistor."

  # Step 6: Prompt to disconnect current tool
  RESPOND MSG="Disconnect tool {printer['gcode_macro SWAP_TOOL'].current_tool} now (including thermistor)."
  M0 S30 MSG="Disconnect tool {printer['gcode_macro SWAP_TOOL'].current_tool}. Click to continue or wait 30s."

  # Step 7: Prompt to connect new tool
  RESPOND MSG="Connect tool {new_tool} now (including thermistor)."
  M0 S30 MSG="Connect tool {new_tool}. Click to continue or wait 30s."

  # Step 8: Switch back to toolhead thermistor
  SET_PIN PIN=thermistor_switch VALUE=1  ; RPi GPIO18 on, MOSFET switches to toolhead thermistor
  RESPOND MSG="Switched to tool {new_tool} thermistor."

  # Step 9: Power up new tool components
  SET_PIN PIN=tool{new_tool}_stepper_enable VALUE=1
  SET_PIN PIN=tool{new_tool}_heater_pin VALUE=0
  SET_PIN PIN=tool{new_tool}_probe_pin VALUE=1
  RESPOND MSG="Tool {new_tool} components powered up."

  # Step 10: Verify thermistor connection
  RESPOND MSG="Verifying new tool thermistor..."
  {% if printer.extruder.temperature < -50 or printer.extruder.temperature > 350 %}
    { action_raise_error("Thermistor not connected properly for tool " ~ new_tipool) }
  {% else %}
    RESPOND MSG="Thermistor for tool {new_tool} reading {printer.extruder.temperature}Â°C. Connection verified."
  {% endif %}

  # Step 11: Update current tool
  SET_GCODE_VARIABLE MACRO=SWAP_TOOL VARIABLE=current_tool VALUE={new_tool}

  # Step 12: Calibration
  RESPOND MSG="Running calibration for tool {new_tool}..."
  G28
  RESPOND MSG="Tool swap complete. Tool {new_tool} is ready."

  # Step 13: Restore state
  RESTORE_GCODE_STATE NAME=tool_swap_state
