[gcode_macro RESET_PRINTER_STATE]
description: Resets printer state to standby
gcode:
  {% if printer.print_stats.state != "standby" %}
    M117 Resetting printer state...
    RESPOND TYPE=command MSG="action:notify Resetting printer state from {printer.print_stats.state}"
    CLEAR_PAUSE
    CANCEL_PRINT_BASE
  {% endif %}
  M117 Printer in standby
  RESPOND TYPE=command MSG="action:notify Printer in standby"
  RESPOND MSG="Debug: Printer state after reset: {printer.print_stats.state}"

[gcode_macro START_JOB]
description: Initiates a job with specified toolhead, material, nozzle size, and extruder index
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("PLA") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}

  # Reset printer state
  RESET_PRINTER_STATE

  M117 Starting job for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Starting job for {nozzle_key}"
  RESPOND MSG="Debug: Print state before job: {printer.print_stats.state}"

  # Confirm toolhead and material
  CONFIRM_TOOLHEAD TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER}

[gcode_macro SET_TOOLHEAD]
description: Initializes the specified toolhead and calls the appropriate tool-specific setup macro
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("PLA") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set SKIP_PROMPT = params.SKIP_PROMPT|default("false")|lower == "true" %}
  {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
  {% set tool_type = toolheads[TOOLHEAD].type|default("DEPOSITION") %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}

  # Validate toolhead
  {% if TOOLHEAD in toolheads %}
    M117 Initializing toolhead {TOOLHEAD}...
    RESPOND TYPE=command MSG="action:notify Initializing toolhead {TOOLHEAD}"
  {% else %}
    RESPOND TYPE=error MSG="Invalid TOOLHEAD: {TOOLHEAD}"
    { action_raise_error("Invalid TOOLHEAD: " ~ TOOLHEAD) }
  {% endif %}

  # Call tool-specific setup macro
  {% if tool_type == "DEPOSITION" %}
    SET_PRINT TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  {% elif tool_type == "LASER" %}
    SET_LASER TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  {% elif tool_type == "SPINDLE" %}
    SET_SPINDLE TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  {% elif tool_type == "DRAG_KNIFE" %}
    SET_DRAG_KNIFE TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  {% else %}
    RESPOND TYPE=error MSG="Unsupported tool type: {tool_type}"
    { action_raise_error("Unsupported tool type: " ~ tool_type) }
  {% endif %}
  
[gcode_macro CONFIRM_TOOLHEAD]
description: Display a popup to confirm toolhead and material before starting a job
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("PLA")|upper %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}
  {% set tool_type = printer["gcode_macro VARIABLES"].toolheads[TOOLHEAD].type %}

  # Display popup
  RESPOND TYPE=command MSG="action:prompt_begin Confirm Toolhead and Material"
  RESPOND TYPE=command MSG="action:prompt_text Toolhead: {TOOLHEAD}"
  RESPOND TYPE=command MSG="action:prompt_text Material: {nozzle_key}"
  {% if tool_type == "DEPOSITION" %}
    RESPOND TYPE=command MSG="action:prompt_text Extruder: {EXTRUDER}"
    RESPOND TYPE=command MSG="action:prompt_text Nozzle Size: {NOZZLE_SIZE} mm"
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_button Proceed|_CONFIRM_TOOLHEAD_RESPONSE RESPONSE=proceed TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER}|success"
  RESPOND TYPE=command MSG="action:prompt_button Cancel|_CONFIRM_TOOLHEAD_RESPONSE RESPONSE=cancel|danger"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro SET_MATERIAL]
description: Sets job parameters for the specified toolhead, material, nozzle size, and extruder
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("PLA") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set SKIP_PROMPT = params.SKIP_PROMPT|default("false")|lower == "true" %}
  {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
  {% set tool_type = toolheads[TOOLHEAD].type|default("DEPOSITION") %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}
  {% set settings = toolheads[TOOLHEAD].materials[nozzle_key] %}

  M117 Setting parameters for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Setting parameters for {nozzle_key}"
  RESPOND MSG="Debug: Tool type: {tool_type}, Nozzle key: {nozzle_key}"

  # Validate settings
  {% if nozzle_key in toolheads[TOOLHEAD].materials %}
    # Universal parameters
    SAVE_VARIABLE VARIABLE=set_material_toolhead VALUE="'{TOOLHEAD}'"
    SAVE_VARIABLE VARIABLE=set_material_material VALUE="'{MATERIAL}'"
    SAVE_VARIABLE VARIABLE=set_material_nozzle_size VALUE={NOZZLE_SIZE}
    SAVE_VARIABLE VARIABLE=set_material_extruder_index VALUE={EXTRUDER}
    SAVE_VARIABLE VARIABLE=set_material_tool_type VALUE="'{tool_type}'"
    SAVE_VARIABLE VARIABLE=set_material_nozzle_key VALUE="'{nozzle_key}'"
    SET_GCODE_OFFSET Z={settings.z_offset|default(0.0)}
    SET_VELOCITY_LIMIT ACCEL={settings.accel|default(5000)} ACCEL_TO_DECEL={settings.accel|default(5000) / 2}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={settings.square_corner_velocity|default(5.0)}

    # Tool-specific parameters
    {% if tool_type == "DEPOSITION" %}
      SAVE_VARIABLE VARIABLE=set_material_bed_temp VALUE={settings.bed_temp|default(60)}
      SAVE_VARIABLE VARIABLE=set_material_extruder_temp VALUE={settings.extruder_temp|default(200)}
      SAVE_VARIABLE VARIABLE=set_material_fan_speed VALUE={settings.fan_speed|default(0.0)}
      SAVE_VARIABLE VARIABLE=set_material_load_length VALUE={settings.load_length|default(10)}
      SAVE_VARIABLE VARIABLE=set_material_load_speed VALUE={settings.load_speed|default(200)}
      SAVE_VARIABLE VARIABLE=set_material_load_wait VALUE={settings.load_wait|default(0)}
      SAVE_VARIABLE VARIABLE=set_material_purge_length VALUE={settings.purge_length|default(45)}
      SAVE_VARIABLE VARIABLE=set_material_purge_wait VALUE={settings.purge_wait|default(0)}
      {% if TOOLHEAD == "SwitchFly" %}
        {% if EXTRUDER == 0 %}
          SWITCH_T0 MATERIAL={nozzle_key}
        {% elif EXTRUDER == 1 %}
          SWITCH_T1 MATERIAL={nozzle_key}
        {% else %}
          RESPOND TYPE=error MSG="Invalid EXTRUDER: {EXTRUDER} for SwitchFly"
          { action_raise_error("Invalid EXTRUDER: " ~ EXTRUDER) }
        {% endif %}
      {% endif %}
    {% elif tool_type == "LASER" %}
      SAVE_VARIABLE VARIABLE=set_material_laser_power VALUE={settings.laser_power|default(0.0)}
      SAVE_VARIABLE VARIABLE=set_material_feed_rate VALUE={settings.feed_rate|default(1000)}
    {% elif tool_type == "SPINDLE" %}
      SAVE_VARIABLE VARIABLE=set_material_spindle_rpm VALUE={settings.spindle_rpm|default(10000)}
      SAVE_VARIABLE VARIABLE=set_material_feed_rate VALUE={settings.feed_rate|default(1000)}
    {% elif tool_type == "DRAG_KNIFE" %}
      SAVE_VARIABLE VARIABLE=set_material_feed_rate VALUE={settings.feed_rate|default(1000)}
    {% else %}
      RESPOND TYPE=error MSG="Unsupported tool type: {tool_type}"
      { action_raise_error("Unsupported tool type: " ~ tool_type) }
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="Material {nozzle_key} not found for {TOOLHEAD}"
    { action_raise_error("Material " ~ nozzle_key ~ " not found for " ~ TOOLHEAD) }
  {% endif %}

  # Proceed to pre-job checks
  {% if not SKIP_PROMPT %}
    PreCheck
  {% endif %}


[gcode_macro _CONFIRM_TOOLHEAD_RESPONSE]
description: Handle response from CONFIRM_TOOLHEAD popup
gcode:
  {% set RESPONSE = params.RESPONSE|default("none") %}
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("PLA") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}

  RESPOND MSG="Debug: Received params: {params}, State: {printer.print_stats.state}"

  {% if not params.NOZZLE_SIZE %}
    RESPOND TYPE=error MSG="NOZZLE_SIZE missing, using default: 0.4"
    M117 NOZZLE_SIZE missing, using default: 0.4
  {% endif %}

  {% if RESPONSE == "proceed" %}
    M117 Proceeding with {TOOLHEAD} and {MATERIAL}
    RESPOND TYPE=command MSG="action:notify Proceeding with {TOOLHEAD} and {MATERIAL}"
    SET_TOOLHEAD MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} TOOLHEAD={TOOLHEAD} EXTRUDER={EXTRUDER} SKIP_PROMPT=true
  {% else %}
    M117 Job canceled by user
    RESPOND TYPE=command MSG="action:notify Job canceled by user"
    RESPOND TYPE=command MSG="action:prompt_end"
    RESET_PRINTER_STATE
  {% endif %}

[gcode_macro SET_PRINT]
description: Configures deposition job settings and calls SET_MATERIAL
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("PLA") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set SKIP_PROMPT = params.SKIP_PROMPT|default("false")|lower == "true" %}
  
  _GENERATE_NOZZLE_KEY TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER}
  {% set nozzle_key = printer.save_variables.variables.nozzle_key %}
  
  M117 Setting up deposition job for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Setting up deposition job for {nozzle_key}"
  RESPOND MSG="Debug: SET_PRINT called with TOOLHEAD={TOOLHEAD}, MATERIAL={MATERIAL}, NOZZLE_SIZE={NOZZLE_SIZE}, EXTRUDER={EXTRUDER}, SKIP_PROMPT={SKIP_PROMPT}, Print state: {printer.print_stats.state}"

  # Apply deposition-specific settings
  SET_MATERIAL TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  
[gcode_macro SET_LASER]
description: Configures laser job settings and calls SET_MATERIAL
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("LASER") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.0)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set SKIP_PROMPT = params.SKIP_PROMPT|default("false")|lower == "true" %}
  
  _GENERATE_NOZZLE_KEY TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER}
  {% set nozzle_key = printer.save_variables.variables.nozzle_key %}
  
  M117 Setting up laser job for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Setting up laser job for {nozzle_key}"
  RESPOND MSG="Debug: SET_LASER called with TOOLHEAD={TOOLHEAD}, MATERIAL={MATERIAL}, NOZZLE_SIZE={NOZZLE_SIZE}, EXTRUDER={EXTRUDER}, SKIP_PROMPT={SKIP_PROMPT}"

  # Apply laser-specific settings
  SET_MATERIAL TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  
[gcode_macro SET_DRAG_KNIFE]
description: Configures drag knife job settings and calls SET_MATERIAL
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("DRAG_KNIFE") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.0)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set SKIP_PROMPT = params.SKIP_PROMPT|default("false")|lower == "true" %}
  
  _GENERATE_NOZZLE_KEY TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER}
  {% set nozzle_key = printer.save_variables.variables.nozzle_key %}
  
  M117 Setting up drag knife job for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Setting up drag knife job for {nozzle_key}"
  RESPOND MSG="Debug: SET_DRAG_KNIFE called with TOOLHEAD={TOOLHEAD}, MATERIAL={MATERIAL}, NOZZLE_SIZE={NOZZLE_SIZE}, EXTRUDER={EXTRUDER}, SKIP_PROMPT={SKIP_PROMPT}"

  # Apply drag knife-specific settings
  SET_MATERIAL TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
[gcode_macro SET_SPINDLE]
description: Configures spindle job settings and calls SET_MATERIAL
gcode:
  {% set TOOLHEAD = params.TOOLHEAD|default("BlockOne") %}
  {% set MATERIAL = params.MATERIAL|default("SPINDLE") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.0)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set SKIP_PROMPT = params.SKIP_PROMPT|default("false")|lower == "true" %}
  
  _GENERATE_NOZZLE_KEY TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER}
  {% set nozzle_key = printer.save_variables.variables.nozzle_key %}
  
  M117 Setting up spindle job for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Setting up spindle job for {nozzle_key}"
  RESPOND MSG="Debug: SET_SPINDLE called with TOOLHEAD={TOOLHEAD}, MATERIAL={MATERIAL}, NOZZLE_SIZE={NOZZLE_SIZE}, EXTRUDER={EXTRUDER}, SKIP_PROMPT={SKIP_PROMPT}"

  # Apply spindle-specific settings
  SET_MATERIAL TOOLHEAD={TOOLHEAD} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER={EXTRUDER} SKIP_PROMPT={SKIP_PROMPT}
  
[gcode_macro PreCheck]
description: Performs pre-job checks for all tool types
gcode:
  {% set TOOLHEAD = printer.save_variables.variables.set_material_toolhead|default("BlockOne") %}
  {% set MATERIAL = printer.save_variables.variables.set_material_material|default("PLA") %}
  {% set NOZZLE_SIZE = printer.save_variables.variables.set_material_nozzle_size|float|default(0.4) %}
  {% set EXTRUDER = printer.save_variables.variables.set_material_extruder_index|default(0)|int %}
  {% set tool_type = printer["gcode_macro VARIABLES"].toolheads[TOOLHEAD].type %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}
  {% set material_settings = printer["gcode_macro VARIABLES"].toolheads[TOOLHEAD].materials[nozzle_key] %}
  {% set bed_temp = material_settings.get("bed_temp", 60)|float %}
  {% set extruder_temp = material_settings.get("extruder_temp", 200)|float %}
  {% set min_extrude_temp = printer["extruder" ~ ("" if EXTRUDER == 0 else EXTRUDER)].min_extrude_temp|default(170)|float %}
  {% set filename = printer.virtual_sdcard.file_path|default("") %}

  M117 Pre-checking for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Pre-check for {nozzle_key}"
  RESPOND MSG="Debug: Print state: {printer.print_stats.state}, File: {filename}, Extruder temp: {printer['extruder' ~ ('' if EXTRUDER == 0 else EXTRUDER)].temperature}, Min: {min_extrude_temp}"

  # Check homing
  {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes %}
    RESPOND TYPE=error MSG="X/Y axes not homed. Run G28 to home all axes."
    { action_raise_error("X/Y axes not homed") }
  {% elif "z" not in printer.toolhead.homed_axes %}
    RESPOND TYPE=error MSG="Z-axis not homed. Run G28 Z to home Z."
    { action_raise_error("Z-axis not homed") }
  {% endif %}

  # Reset state if not standby
  {% if printer.print_stats.state != "standby" %}
    M117 Resetting state for {nozzle_key}...
    RESPOND TYPE=command MSG="action:notify Resetting state for {nozzle_key}. Current state: {printer.print_stats.state}"
    RESET_PRINTER_STATE
  {% endif %}

  # Tool-specific checks
  {% if tool_type == "DEPOSITION" %}
    # Preheat and prime
    PREHEAT
  {% elif tool_type in ["LASER", "SPINDLE", "DRAG_KNIFE"] %}
    M117 Tool preparation for {nozzle_key}...
    RESPOND TYPE=command MSG="action:notify Tool preparation for {nozzle_key}"
    G1 Z5.0 F1000 ; Lift tool
    {% if tool_type == "LASER" %}
      SET_LASER POWER=0
    {% elif tool_type == "SPINDLE" %}
      M5 ; Stop spindle
    {% elif tool_type == "DRAG_KNIFE" %}
      SET_GCODE_OFFSET Z=0 ; Reset Z offset
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="Unsupported tool type: {tool_type}"
    { action_raise_error("Unsupported tool type: " ~ tool_type) }
  {% endif %}

  # Start the job
  {% if filename %}
    M117 Starting job for {nozzle_key}...
    RESPOND TYPE=command MSG="action:notify Starting job for {nozzle_key}"
    SDCARD_PRINT_FILE FILENAME="{filename}"
  {% else %}
    RESPOND TYPE=error MSG="No G-code file selected. Select a file to start."
    { action_raise_error("No G-code file selected") }
  {% endif %}

  M117 Ready to process {nozzle_key}
  RESPOND TYPE=command MSG="action:notify Ready to process {nozzle_key}"
  LEDFLASH

[gcode_macro PREHEAT]
description: Preheat bed and extruder for deposition jobs
gcode:
  {% set bed_temp = printer.save_variables.variables.set_material_bed_temp|float|default(60) %}
  {% set extruder_temp = printer.save_variables.variables.set_material_extruder_temp|float|default(200) %}
  {% set MATERIAL = printer.save_variables.variables.set_material_material|default("PLA") %}
  {% set NOZZLE_SIZE = printer.save_variables.variables.set_material_nozzle_size|float|default(0.4) %}
  {% set TOOLHEAD = printer.save_variables.variables.set_material_toolhead|default("BlockOne") %}
  {% set EXTRUDER = printer.save_variables.variables.set_material_extruder_index|default(0)|int %}
  {% set min_extrude_temp = printer["extruder" ~ ("" if EXTRUDER == 0 else EXTRUDER)].min_extrude_temp|default(170)|float %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}

  M117 Preheating for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Preheating for {nozzle_key}"
  RESPOND MSG="Debug: Bed temp: {printer.heater_bed.temperature}, Target: {bed_temp}, Extruder temp: {printer['extruder' ~ ('' if EXTRUDER == 0 else EXTRUDER)].temperature}, Target: {extruder_temp}, Min: {min_extrude_temp}"

  # Preheat bed
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
  M190 S{bed_temp} ; Wait for bed
  SET_PIN PIN=Umbilical_LED VALUE=1.0

  # Preheat extruder
  M104 S{extruder_temp}
  M109 S{extruder_temp} ; Wait for extruder

  # Deposition-specific steps
  Extruder_Check EXTRUDER={EXTRUDER}
  Bed_Calibrate
  PRIME_LINE

  M117 Preheat complete for {nozzle_key}
  RESPOND TYPE=command MSG="action:notify Preheat complete for {nozzle_key}"
  LEDFLASH

[gcode_macro Extruder_Check]
description: Check and heat extruder for deposition jobs
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set extruder_temp = printer.save_variables.variables.set_material_extruder_temp|float|default(200) %}
  {% set min_extrude_temp = printer["extruder" ~ ("" if EXTRUDER == 0 else EXTRUDER)].min_extrude_temp|default(170)|float %}
  {% set MATERIAL = printer.save_variables.variables.set_material_material|default("PLA") %}
  {% set NOZZLE_SIZE = printer.save_variables.variables.set_material_nozzle_size|float|default(0.4) %}
  {% set TOOLHEAD = printer.save_variables.variables.set_material_toolhead|default("BlockOne") %}
  {% set nozzle_key = MATERIAL ~ (("_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ "_T" ~ EXTRUDER) if TOOLHEAD == "SwitchFly" else (("_" ~ (NOZZLE_SIZE|string|replace(".", "_"))) if TOOLHEAD == "BlockOne" else "")) %}

  M117 Checking extruder {EXTRUDER} for {nozzle_key}...
  RESPOND TYPE=command MSG="action:notify Checking extruder {EXTRUDER} for {nozzle_key}"
  RESPOND MSG="Debug: Extruder temp: {printer['extruder' ~ ('' if EXTRUDER == 0 else EXTRUDER)].temperature}, Target: {extruder_temp}, Min: {min_extrude_temp}"

  {% if printer["extruder" ~ ("" if EXTRUDER == 0 else EXTRUDER)].temperature < min_extrude_temp %}
    M117 Heating extruder {EXTRUDER}...
    M104 S{extruder_temp}
    M109 S{extruder_temp}
    M117 Extruder {EXTRUDER} ready for {nozzle_key}
    RESPOND TYPE=command MSG="action:notify Extruder {EXTRUDER} ready for {nozzle_key}"
    LEDFLASH
  {% else %}
    M117 Extruder {EXTRUDER} already hot
    RESPOND TYPE=command MSG="action:notify Extruder {EXTRUDER} already hot for {nozzle_key}"
    M109 S{extruder_temp} ; Ensure temperature
    LEDFLASH
  {% endif %}