[gcode_macro ADD_NEW_TOOL]
description: Start adding a new toolhead with name, guiding through steps via console
gcode:
  {% set TOOLHEAD_NAME = params.TOOLHEAD_NAME|default("") %}
  {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
  {% if TOOLHEAD_NAME == "" %}
    M117 Error: TOOLHEAD_NAME required
    RESPOND TYPE=error MSG="TOOLHEAD_NAME is required"
    { action_raise_error("Provide TOOLHEAD_NAME") }
  {% endif %}
  {% if TOOLHEAD_NAME in toolheads %}
    M117 Error: Toolhead {TOOLHEAD_NAME} already exists
    RESPOND TYPE=error MSG="Toolhead {TOOLHEAD_NAME} already exists"
    { action_raise_error("Toolhead name must be unique") }
  {% endif %}
  M117 Run: ADD_NEW_TOOL_RESPONSE STEP=1 TOOLHEAD_NAME={TOOLHEAD_NAME}
  RESPOND MSG="Next: Enter tool ID in console: ADD_NEW_TOOL_RESPONSE STEP=1 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID=<integer>"
  
[gcode_macro EDIT_TOOL]
description: Initiates editing an existing toolhead
gcode:
  {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
  {% if toolheads|length == 0 %}
    RESPOND TYPE=error MSG="No toolheads available to edit"
    M117 No toolheads available
    { action_raise_error("No toolheads defined") }
  {% else %}
    RESPOND TYPE=command MSG="action:prompt_begin Select Toolhead to Edit"
    {% for toolhead in toolheads %}
      RESPOND TYPE=command MSG="action:prompt_button {toolhead}|EDIT_TOOL_RESPONSE STEP=1 TOOLHEAD_NAME='{toolhead}'"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button Cancel|RESET_PRINTER_STATE"
    RESPOND TYPE=command MSG="action:prompt_end"
  {% endif %}

[gcode_macro DELETE_TOOL]
description: Initiates deleting an existing toolhead
gcode:
  {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
  {% if toolheads|length == 0 %}
    RESPOND TYPE=error MSG="No toolheads available to delete"
    M117 No toolheads available
    { action_raise_error("No toolheads defined") }
  {% else %}
    RESPOND TYPE=command MSG="action:prompt_begin Select Toolhead to Delete"
    {% for toolhead in toolheads %}
      RESPOND TYPE=command MSG="action:prompt_button {toolhead}|DELETE_TOOL_RESPONSE TOOLHEAD_NAME='{toolhead}'"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button Cancel|RESET_PRINTER_STATE"
    RESPOND TYPE=command MSG="action:prompt_end"
  {% endif %}

[gcode_macro TEST_PROMPT]
description: Test Moonraker prompt
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Test Prompt"
  RESPOND TYPE=command MSG="action:prompt_input TEST_INPUT=Enter something:"
  RESPOND TYPE=command MSG="action:prompt_button Continue|TEST_RESPONSE"
  RESPOND TYPE=command MSG="action:prompt_button Cancel|RESET_PRINTER_STATE"
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro ADD_NEW_TOOL_RESPONSE]
description: Handles responses for adding a new toolhead
gcode:
  {% set STEP = params.STEP|default(1)|int %}
  {% set TOOLHEAD_NAME = params.TOOLHEAD_NAME|default("") %}
  {% set TOOL_ID = params.TOOL_ID|default("") %}
  {% set TOOLHEAD_TYPE = params.TOOLHEAD_TYPE|default("") %}
  {% set EXTRUDER_COUNT = params.EXTRUDER_COUNT|default("") %}
  {% set MATERIAL = params.MATERIAL|default("") %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default("") %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default("") %}
  {% set BED_TEMP = params.BED_TEMP|default("") %}
  {% set LASER_POWER = params.LASER_POWER|default("") %}
  {% set SPINDLE_SPEED = params.SPINDLE_SPEED|default("") %}
  {% set PRESSURE = params.PRESSURE|default("") %}
  {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
  {% set tool_mapping = printer["gcode_macro VARIABLES"].tool_mapping %}
  {% set led_pin = printer.save_variables.variables.get("led_pin", "Umbilical_LED") %}
  
  {% if STEP == 1 %}
    {% if TOOLHEAD_NAME == "" or TOOLHEAD_NAME in toolheads %}
      M117 Error: Invalid or duplicate toolhead name: {TOOLHEAD_NAME}
      RESPOND TYPE=error MSG="Invalid or duplicate toolhead name: {TOOLHEAD_NAME}"
      { action_raise_error("Toolhead name must be unique and non-empty") }
    {% endif %}
    {% if TOOL_ID == "" %}
      M117 Error: TOOL_ID required
      RESPOND TYPE=error MSG="Enter tool ID in console: ADD_NEW_TOOL_RESPONSE STEP=1 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID=<integer>"
      { action_raise_error("TOOL_ID required") }
    {% endif %}
    {% if TOOL_ID in tool_mapping %}
      M117 Error: Tool ID {TOOL_ID} already used
      RESPOND TYPE=error MSG="Tool ID {TOOL_ID} already used"
      { action_raise_error("Tool ID must be unique") }
    {% endif %}
    M117 Run: ADD_NEW_TOOL_RESPONSE STEP=2 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID}
    RESPOND MSG="Next: Enter toolhead type in console: ADD_NEW_TOOL_RESPONSE STEP=2 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE=<DEPOSITION,LASER,SPINDLE,DRAG_KNIFE>"
  {% elif STEP == 2 %}
    {% if TOOLHEAD_TYPE not in ["DEPOSITION", "LASER", "SPINDLE", "DRAG_KNIFE"] %}
      M117 Error: Invalid toolhead type: {TOOLHEAD_TYPE}
      RESPOND TYPE=error MSG="Enter valid toolhead type in console: ADD_NEW_TOOL_RESPONSE STEP=2 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE=<DEPOSITION,LASER,SPINDLE,DRAG_KNIFE>"
      { action_raise_error("Toolhead type must be DEPOSITION, LASER, SPINDLE, or DRAG_KNIFE") }
    {% endif %}
    {% if TOOLHEAD_TYPE == "DEPOSITION" %}
      M117 Run: ADD_NEW_TOOL_RESPONSE STEP=3 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE}
      RESPOND MSG="Next: Enter extruder count in console: ADD_NEW_TOOL_RESPONSE STEP=3 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=<1 or 2>"
    {% else %}
      M117 Run: ADD_NEW_TOOL_RESPONSE STEP=4 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0
      RESPOND MSG="Next: Enter material in console: ADD_NEW_TOOL_RESPONSE STEP=4 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL=<e.g., PLA, PLYWOOD>"
    {% endif %}
  {% elif STEP == 3 %}
    {% if EXTRUDER_COUNT not in ["1", "2"] %}
      M117 Error: Invalid extruder count: {EXTRUDER_COUNT}
      RESPOND TYPE=error MSG="Enter valid extruder count in console: ADD_NEW_TOOL_RESPONSE STEP=3 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=<1 or 2>"
      { action_raise_error("Extruder count must be 1 or 2") }
    {% endif %}
    M117 Run: ADD_NEW_TOOL_RESPONSE STEP=4 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT}
    RESPOND MSG="Next: Enter material in console: ADD_NEW_TOOL_RESPONSE STEP=4 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL=<e.g., PLA, ABS>"
  {% elif STEP == 4 %}
    {% if MATERIAL == "" %}
      M117 Error: Material required
      RESPOND TYPE=error MSG="Enter material in console: ADD_NEW_TOOL_RESPONSE STEP=4 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL=<e.g., PLA, ABS>"
      { action_raise_error("Material cannot be empty") }
    {% endif %}
    {% if TOOLHEAD_TYPE == "DEPOSITION" %}
      M117 Run: ADD_NEW_TOOL_RESPONSE STEP=5 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL={MATERIAL}
      RESPOND MSG="Next: Enter nozzle size in console: ADD_NEW_TOOL_RESPONSE STEP=5 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL={MATERIAL} NOZZLE_SIZE=<e.g., 0.4>"
    {% else %}
      {% set next_step = "6" %}
      {% if TOOLHEAD_TYPE == "LASER" %}
        M117 Run: ADD_NEW_TOOL_RESPONSE STEP={next_step} TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL={MATERIAL} NOZZLE_SIZE=0.0
        RESPOND MSG="Next: Enter laser power in console: ADD_NEW_TOOL_RESPONSE STEP={next_step} TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL={MATERIAL} NOZZLE_SIZE=0.0 LASER_POWER=<e.g., 0.8>"
      {% elif TOOLHEAD_TYPE == "SPINDLE" %}
        M117 Run: ADD_NEW_TOOL_RESPONSE STEP={next_step} TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL={MATERIAL} NOZZLE_SIZE=0.0
        RESPOND MSG="Next: Enter spindle speed in console: ADD_NEW_TOOL_RESPONSE STEP={next_step} TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL={MATERIAL} NOZZLE_SIZE=0.0 SPINDLE_SPEED=<e.g., 12000>"
      {% elif TOOLHEAD_TYPE == "DRAG_KNIFE" %}
        M117 Run: ADD_NEW_TOOL_RESPONSE STEP={next_step} TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL={MATERIAL} NOZZLE_SIZE=0.0
        RESPOND MSG="Next: Enter pressure in console: ADD_NEW_TOOL_RESPONSE STEP={next_step} TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT=0 MATERIAL={MATERIAL} NOZZLE_SIZE=0.0 PRESSURE=<e.g., 150>"
      {% endif %}
    {% endif %}
  {% elif STEP == 5 %}
    {% if NOZZLE_SIZE|float <= 0 %}
      M117 Error: Invalid nozzle size: {NOZZLE_SIZE}
      RESPOND TYPE=error MSG="Enter valid nozzle size in console: ADD_NEW_TOOL_RESPONSE STEP=5 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL={MATERIAL} NOZZLE_SIZE=<e.g., 0.4>"
      { action_raise_error("Nozzle size must be positive") }
    {% endif %}
    M117 Run: ADD_NEW_TOOL_RESPONSE STEP=6 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE}
    RESPOND MSG="Next: Enter temperatures in console: ADD_NEW_TOOL_RESPONSE STEP=6 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER_TEMP=<e.g., 200> BED_TEMP=<e.g., 60>"
  {% elif STEP == 6 %}
    {% if TOOLHEAD_TYPE == "DEPOSITION" %}
      {% if EXTRUDER_TEMP|int <= 0 or BED_TEMP|int < 0 %}
        M117 Error: Invalid temperatures: EXTRUDER_TEMP={EXTRUDER_TEMP}, BED_TEMP={BED_TEMP}
        RESPOND TYPE=error MSG="Enter valid temperatures in console: ADD_NEW_TOOL_RESPONSE STEP=6 TOOLHEAD_NAME={TOOLHEAD_NAME} TOOL_ID={TOOL_ID} TOOLHEAD_TYPE={TOOLHEAD_TYPE} EXTRUDER_COUNT={EXTRUDER_COUNT} MATERIAL={MATERIAL} NOZZLE_SIZE={NOZZLE_SIZE} EXTRUDER_TEMP=<e.g., 200> BED_TEMP=<e.g., 60>"
        { action_raise_error("Invalid temperatures") }
      {% endif %}
    {% endif %}
    {% set nozzle_key = MATERIAL if TOOLHEAD_TYPE in ["LASER", "SPINDLE", "DRAG_KNIFE"] else (MATERIAL ~ "_" ~ (NOZZLE_SIZE|string|replace(".", "_")) ~ (("_T0") if EXTRUDER_COUNT|int == 2 else "")) %}
    {% set materials = {} %}
    {% if TOOLHEAD_TYPE == "DEPOSITION" %}
      {% set base_settings = {
        "extruder_temp": EXTRUDER_TEMP|int|default(200),
        "bed_temp": BED_TEMP|int|default(60),
        "z_offset": 0.1 if NOZZLE_SIZE|float <= 0.4 else 0.2,
        "accel": 2000.0,
        "extruder_count": EXTRUDER_COUNT|int,
        "nozzle_size": NOZZLE_SIZE|float,
        "square_corner_velocity": 5.0,
        "fan_speed": 0.5,
        "load_length": 10.0,
        "load_speed": 50,
        "load_wait": 1000,
        "purge_length": 12.0,
        "purge_wait": 2000,
        "stepper_x_current": 0.8,
        "stepper_y_current": 0.8,
        "stepper_z_current": 1.0,
        "extruder_current": 0.6
      } %}
      {% if EXTRUDER_COUNT|int == 2 %}
        {% set materials = {
          (nozzle_key): base_settings,
          (nozzle_key ~ "_T1"): base_settings
        } %}
      {% else %}
        {% set materials = {(nozzle_key): base_settings} %}
      {% endif %}
    {% elif TOOLHEAD_TYPE == "LASER" %}
      {% set materials = {nozzle_key: {
        "laser_power": LASER_POWER|float|default(0.8),
        "bed_temp": 0,
        "z_offset": 0.5,
        "accel": 1000.0,
        "square_corner_velocity": 5.0,
        "feed_rate": 600,
        "stepper_x_current": 0.7,
        "stepper_y_current": 0.7,
        "stepper_z_current": 0.8
      }} %}
    {% elif TOOLHEAD_TYPE == "SPINDLE" %}
      {% set materials = {nozzle_key: {
        "spindle_speed": SPINDLE_SPEED|int|default(12000),
        "bed_temp": 0,
        "z_offset": 0.3,
        "accel": 800.0,
        "square_corner_velocity": 5.0,
        "feed_rate": 1000,
        "stepper_x_current": 1.2,
        "stepper_y_current": 1.2,
        "stepper_z_current": 1.2
      }} %}
    {% elif TOOLHEAD_TYPE == "DRAG_KNIFE" %}
      {% set materials = {nozzle_key: {
        "pressure": PRESSURE|int|default(150),
        "bed_temp": 0,
        "z_offset": 0.1,
        "accel": 1200.0,
        "square_corner_velocity": 5.0,
        "feed_rate": 1000,
        "stepper_x_current": 0.6,
        "stepper_y_current": 0.6,
        "stepper_z_current": 0.8
      }} %}
    {% endif %}
    {% set toolhead_data = {"type": TOOLHEAD_TYPE, "extruder_count": EXTRUDER_COUNT|int|default(0), "materials": materials} %}
    {% set json_string = toolhead_data|tojson %}
    RESPOND MSG="Debug: toolhead_data={json_string}"
    {% set escaped_toolhead_data = json_string|replace('"', '\\"')|replace('\n', '') %}
    {% set shell_command = "/home/pi/printer_data/config/variables.cfg add \"{{TOOLHEAD_NAME}}\" \"{{escaped_toolhead_data}}\" {{TOOL_ID}}" %}
    RESPOND MSG="Debug: Running shell command: update_toolheads {shell_command}"
    RUN_SHELL_COMMAND CMD=update_toolheads PARAMS="{shell_command}"
    M117 Toolhead {TOOLHEAD_NAME} added
    RESPOND TYPE=command MSG="action:notify Toolhead {TOOLHEAD_NAME} added"
    {% if led_pin in printer %}
      LEDFLASH LED_PIN={led_pin}
    {% endif %}
    SAVE_VARIABLE VARIABLE=toolheads VALUE="{printer['gcode_macro VARIABLES'].toolheads|tojson}"
    SAVE_VARIABLE VARIABLE=tool_mapping VALUE="{printer['gcode_macro VARIABLES'].tool_mapping|tojson}"