[gcode_macro ADD_TOOL_MACRO]
description: Initiates adding a new toolhead
variable_toolname: ""
variable_tooltype: ""
variable_parameters: {}
gcode:
    {% set TOOLNAME = params.TOOLNAME|default("") %}
    {% if TOOLNAME == "" %}
        RESPOND TYPE=error MSG="TOOLNAME parameter required"
        { action_raise_error("TOOLNAME parameter required") }
    {% elif TOOLNAME in printer["gcode_macro VARIABLES"].toolheads %}
        RESPOND TYPE=error MSG="Toolhead {TOOLNAME} already exists"
        { action_raise_error("Toolhead " ~ TOOLNAME ~ " already exists") }
    {% else %}
        SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=toolname VALUE="'{TOOLNAME}'"
        SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=tooltype VALUE="''"
        RESPOND TYPE=command MSG="action:prompt_begin Select Tool Type"
        RESPOND TYPE=command MSG="action:prompt_button Additive|SET_TOOL_TYPE TYPE=DEPOSITION|primary"
        RESPOND TYPE=command MSG="action:prompt_button Subtractive|_SUBTRACTIVE_TYPE_PROMPT|primary"
        RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% endif %}

[gcode_macro SET_TOOL_TYPE]
description: Sets the tool type and advances to parameter prompt
gcode:
    {% set TYPE = params.TYPE|default("") %}
    {% if TYPE not in ["DEPOSITION", "CNC", "LASER"] %}
        RESPOND TYPE=error MSG="Invalid TYPE parameter"
        { action_raise_error("Invalid TYPE parameter") }
    {% endif %}
    SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=tooltype VALUE="'{TYPE}'"
    {% if TYPE == "DEPOSITION" %}
        _PROMPT_NOZZLE_SIZE
    {% elif TYPE in ["CNC", "LASER"] %}
        _PROMPT_Z_OFFSET_SUBTRACTIVE
    {% endif %}

[gcode_macro _SUBTRACTIVE_TYPE_PROMPT]
description: Prompts for subtractive tool type
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Select Subtractive Type"
    RESPOND TYPE=command MSG="action:prompt_button CNC|SET_TOOL_TYPE TYPE=CNC|primary"
    RESPOND TYPE=command MSG="action:prompt_button LASER|SET_TOOL_TYPE TYPE=LASER|primary"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_NOZZLE_SIZE]
description: Prompts for nozzle size
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.nozzle_size|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Nozzle Size"
    RESPOND TYPE=command MSG="action:prompt_text Nozzle Size: {current} mm"
    RESPOND TYPE=command MSG="action:prompt_button +0.05mm|SET_PARAM PARAM=nozzle_size INCREMENT=0.05|primary"
    RESPOND TYPE=command MSG="action:prompt_button +0.5mm|SET_PARAM PARAM=nozzle_size INCREMENT=0.5|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.05mm|SET_PARAM PARAM=nozzle_size INCREMENT=-0.05|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.5mm|SET_PARAM PARAM=nozzle_size INCREMENT=-0.5|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=nozzle_size|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_BED_TEMP]
description: Prompts for bed temperature
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.bed_temp|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Bed Temperature"
    RESPOND TYPE=command MSG="action:prompt_text Bed Temp: {current} °C"
    RESPOND TYPE=command MSG="action:prompt_button +1°C|SET_PARAM PARAM=bed_temp INCREMENT=1|primary"
    RESPOND TYPE=command MSG="action:prompt_button +5°C|SET_PARAM PARAM=bed_temp INCREMENT=5|primary"
    RESPOND TYPE=command MSG="action:prompt_button -1°C|SET_PARAM PARAM=bed_temp INCREMENT=-1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -5°C|SET_PARAM PARAM=bed_temp INCREMENT=-5|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=bed_temp|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _PROMPT_EXTRUDER_TEMP]
description: Prompts for extruder temperature
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.extruder_temp|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Extruder Temperature"
    RESPOND TYPE=command MSG="action:prompt_text Extruder Temp: {current} °C"
    RESPOND TYPE=command MSG="action:prompt_button +1°C|SET_PARAM PARAM=extruder_temp INCREMENT=1|primary"
    RESPOND TYPE=command MSG="action:prompt_button +5°C|SET_PARAM PARAM=extruder_temp INCREMENT=5|primary"
    RESPOND TYPE=command MSG="action:prompt_button -1°C|SET_PARAM PARAM=extruder_temp INCREMENT=-1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -5°C|SET_PARAM PARAM=extruder_temp INCREMENT=-5|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=extruder_temp|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _PROMPT_Z_OFFSET]
description: Prompts for z offset
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.z_offset|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Z Offset"
    RESPOND TYPE=command MSG="action:prompt_text Z Offset: {current} mm"
    RESPOND TYPE=command MSG="action:prompt_button +0.01mm|SET_PARAM PARAM=z_offset INCREMENT=0.01|primary"
    RESPOND TYPE=command MSG="action:prompt_button +0.1mm|SET_PARAM PARAM=z_offset INCREMENT=0.1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.01mm|SET_PARAM PARAM=z_offset INCREMENT=-0.01|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.1mm|SET_PARAM PARAM=z_offset INCREMENT=-0.1|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=z_offset|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_FEED_RATE]
description: Prompts for feed rate
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.feed_rate|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Feed Rate"
    RESPOND TYPE=command MSG="action:prompt_text Feed Rate: {current} mm/min"
    RESPOND TYPE=command MSG="action:prompt_button +10mm/min|SET_PARAM PARAM=feed_rate INCREMENT=10|primary"
    RESPOND TYPE=command MSG="action:prompt_button +100mm/min|SET_PARAM PARAM=feed_rate INCREMENT=100|primary"
    RESPOND TYPE=command MSG="action:prompt_button -10mm/min|SET_PARAM PARAM=feed_rate INCREMENT=-10|primary"
    RESPOND TYPE=command MSG="action:prompt_button -100mm/min|SET_PARAM PARAM=feed_rate INCREMENT=-100|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=feed_rate|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_LASER_POWER]
description: Prompts for laser power
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.laser_power|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Laser Power"
    RESPOND TYPE=command MSG="action:prompt_text Laser Power: {current} %"
    RESPOND TYPE=command MSG="action:prompt_button +1%|SET_PARAM PARAM=laser_power INCREMENT=1|primary"
    RESPOND TYPE=command MSG="action:prompt_button +10%|SET_PARAM PARAM=laser_power INCREMENT=10|primary"
    RESPOND TYPE=command MSG="action:prompt_button -1%|SET_PARAM PARAM=laser_power INCREMENT=-1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -10%|SET_PARAM PARAM=laser_power INCREMENT=-10|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=laser_power|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_SPINDLE_RPM]
description: Prompts for spindle RPM
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.spindle_rpm|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Spindle RPM"
    RESPOND TYPE=command MSG="action:prompt_text Spindle RPM: {current}"
    RESPOND TYPE=command MSG="action:prompt_button +100|SET_PARAM PARAM=spindle_rpm INCREMENT=100|primary"
    RESPOND TYPE=command MSG="action:prompt_button +1000|SET_PARAM PARAM=spindle_rpm INCREMENT=1000|primary"
    RESPOND TYPE=command MSG="action:prompt_button -100|SET_PARAM PARAM=spindle_rpm INCREMENT=-100|primary"
    RESPOND TYPE=command MSG="action:prompt_button -1000|SET_PARAM PARAM=spindle_rpm INCREMENT=-1000|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=spindle_rpm|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_Z_OFFSET_SUBTRACTIVE]
description: Prompts for z offset for subtractive tools
gcode:
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set current = params.z_offset|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Z Offset"
    RESPOND TYPE=command MSG="action:prompt_text Z Offset: {current} mm"
    RESPOND TYPE=command MSG="action:prompt_button +0.01mm|SET_PARAM PARAM=z_offset INCREMENT=0.01|primary"
    RESPOND TYPE=command MSG="action:prompt_button +0.1mm|SET_PARAM PARAM=z_offset INCREMENT=0.1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.01mm|SET_PARAM PARAM=z_offset INCREMENT=-0.01|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.1mm|SET_PARAM PARAM=z_offset INCREMENT=-0.1|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_PARAM CURRENT=z_offset|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro SET_PARAM]
description: Sets a parameter for the toolhead
gcode:
    {% set PARAM = params.PARAM|default("") %}
    {% set INCREMENT = params.INCREMENT|float|default(0) %}
    {% set VALUE = params.VALUE|default("") %}
    {% set current_params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set new_value = VALUE %}
    {% if INCREMENT != 0 %}
        {% set current_value = current_params[PARAM]|float %}
        {% set new_value = (current_value + INCREMENT)|float %}
        {% if new_value < 0 %}
            {% set new_value = 0.0 %}
            RESPOND TYPE=command MSG="action:notify {PARAM} cannot be negative"
        {% endif %}
    {% endif %}
    {% set updated_params = current_params|merge({PARAM: new_value}) %}
    SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=parameters VALUE="{updated_params}"
    {% if PARAM == "nozzle_size" %}
        _PROMPT_NOZZLE_SIZE
    {% elif PARAM == "bed_temp" %}
        _PROMPT_BED_TEMP
    {% elif PARAM == "extruder_temp" %}
        _PROMPT_EXTRUDER_TEMP
    {% elif PARAM == "z_offset" %}
        {% if printer["gcode_macro ADD_TOOL_MACRO"].tooltype == "DEPOSITION" %}
            _PROMPT_Z_OFFSET
        {% else %}
            _PROMPT_Z_OFFSET_SUBTRACTIVE
        {% endif %}
    {% elif PARAM == "feed_rate" %}
        _PROMPT_FEED_RATE
    {% elif PARAM == "laser_power" %}
        _PROMPT_LASER_POWER
    {% elif PARAM == "spindle_rpm" %}
        _PROMPT_SPINDLE_RPM
    {% endif %}

[gcode_macro _NEXT_PARAM]
description: Advances to the next parameter prompt
gcode:
    {% set CURRENT = params.CURRENT|default("") %}
    {% set tooltype = printer["gcode_macro ADD_TOOL_MACRO"].tooltype %}
    {% if tooltype == "DEPOSITION" %}
        {% if CURRENT == "nozzle_size" %}
            _PROMPT_BED_TEMP
        {% elif CURRENT == "bed_temp" %}
            _PROMPT_EXTRUDER_TEMP
        {% elif CURRENT == "extruder_temp" %}
            _PROMPT_Z_OFFSET
        {% elif CURRENT == "z_offset" %}
            _CONFIRM_TOOL_CONFIG
        {% endif %}
    {% elif tooltype in ["CNC", "LASER"] %}
        {% if CURRENT == "z_offset" %}
            _PROMPT_FEED_RATE
        {% elif CURRENT == "feed_rate" %}
            {% if tooltype == "CNC" %}
                _PROMPT_SPINDLE_RPM
            {% elif tooltype == "LASER" %}
                _PROMPT_LASER_POWER
            {% endif %}
        {% elif CURRENT in ["spindle_rpm", "laser_power"] %}
            _CONFIRM_TOOL_CONFIG
        {% endif %}
    {% endif %}

[gcode_macro _CONFIRM_TOOL_CONFIG]
description: Displays confirmation popup for toolhead configuration
gcode:
    {% set toolname = printer["gcode_macro ADD_TOOL_MACRO"].toolname %}
    {% set tooltype = printer["gcode_macro ADD_TOOL_MACRO"].tooltype %}
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    RESPOND TYPE=command MSG="action:prompt_begin Confirm Toolhead Configuration"
    RESPOND TYPE=command MSG="action:prompt_text Toolhead: {toolname}"
    RESPOND TYPE=command MSG="action:prompt_text Type: {tooltype}"
    {% for key, value in params.items() %}
        RESPOND TYPE=command MSG="action:prompt_text {key}: {value}"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_SAVE_TOOL_CONFIG|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_TOOL_CONFIG|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _SAVE_TOOL_CONFIG]
description: Saves the toolhead config as a gcode_macro and updates variables
gcode:
    {% set toolname = printer["gcode_macro ADD_TOOL_MACRO"].toolname %}
    {% set tooltype = printer["gcode_macro ADD_TOOL_MACRO"].tooltype %}
    {% set params = printer["gcode_macro ADD_TOOL_MACRO"].parameters %}
    {% set config_content = "[gcode_macro " + toolname + "]\n" %}
    {% set config_content = config_content + "variable_type: " + tooltype + "\n" %}
    {% for key, value in params.items() %}
        {% set config_content = config_content + "variable_" + key + ": " + value|string + "\n" %}
    {% endfor %}
    {% set default_params = {
        "load_length": 10.0,
        "load_speed": 200.0,
        "load_wait": 0.0,
        "purge_length": 45.0,
        "purge_wait": 0.0,
        "accel": 5000.0,
        "square_corner_velocity": 5.0
    } %}
    {% for key, value in default_params.items() %}
        {% if key not in params %}
            {% set config_content = config_content + "variable_" + key + ": " + value|string + "\n" %}
        {% endif %}
    {% endfor %}
    {% set config_content = config_content + "gcode:\n  M117 Toolhead " + toolname + " loaded\n" %}
    RUN_SHELL_COMMAND CMD=create_toolhead_config PARAMS="toolname={toolname} content='{config_content}'"
    {% set toolheads = printer["gcode_macro VARIABLES"].toolheads|merge({toolname: {"type": tooltype, "materials": {}}}) %}
    SAVE_VARIABLE VARIABLE=toolheads VALUE="{toolheads}"
    RESPOND TYPE=command MSG="action:notify Toolhead {toolname} saved. Run SET_ACTIVE_TOOL TOOLNAME={toolname} to activate."
    _CANCEL_TOOL_CONFIG

[gcode_macro _CANCEL_TOOL_CONFIG]
description: Cancels toolhead configuration
gcode:
    SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=toolname VALUE="''"
    SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=tooltype VALUE="''"
    SET_GCODE_VARIABLE MACRO=ADD_TOOL_MACRO VARIABLE=parameters VALUE="{}"
    RESPOND TYPE=command MSG="action:notify Toolhead configuration cancelled"

[gcode_macro SET_ACTIVE_TOOL]
description: Sets the active toolhead
gcode:
    {% set TOOLNAME = params.TOOLNAME|default("") %}
    {% if TOOLNAME == "" or TOOLNAME not in printer["gcode_macro VARIABLES"].toolheads %}
        RESPOND TYPE=error MSG="Valid TOOLNAME parameter required"
        { action_raise_error("Valid TOOLNAME parameter required") }
    {% else %}
        RUN_SHELL_COMMAND CMD=update_includes PARAMS="toolname={TOOLNAME}"
        RESPOND TYPE=command MSG="action:notify Toolhead {TOOLNAME} activated. Restart Klipper to apply."
    {% endif %}

[gcode_macro ADD_MATERIAL]
description: Adds a material for a toolhead, optionally via popups
gcode:
    {% set TOOLHEAD = params.TOOLHEAD|default("") %}
    {% set MATERIAL_NAME = params.NAME|default(params.MATERIAL_NAME|default("")) %}
    {% set USE_POPUP = params.USE_POPUP|default("false")|lower == "true" %}
    {% if TOOLHEAD == "" or TOOLHEAD not in printer["gcode_macro VARIABLES"].toolheads %}
        RESPOND TYPE=error MSG="Valid TOOLHEAD parameter required"
        { action_raise_error("Valid TOOLHEAD parameter required") }
    {% elif printer["gcode_macro " + TOOLHEAD].type != "DEPOSITION" %}
        RESPOND TYPE=error MSG="Materials only supported for DEPOSITION toolheads"
        { action_raise_error("Materials only supported for DEPOSITION toolheads") }
    {% elif USE_POPUP %}
        {% if MATERIAL_NAME == "" %}
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=toolhead VALUE="'{TOOLHEAD}'"
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'material_name'"
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=parameters VALUE="{'type': '{printer[\"gcode_macro \" + TOOLHEAD].type}', 'nozzle_size': 0.0, 'bed_temp': 0.0, 'extruder_temp': 0.0, 'z_offset': 0.0}"
            _PROMPT_MATERIAL
        {% elif MATERIAL_NAME in printer["gcode_macro VARIABLES"].toolheads[TOOLHEAD].materials %}
            RESPOND TYPE=error MSG="Material {MATERIAL_NAME} already exists for {TOOLHEAD}"
            { action_raise_error("Material " ~ MATERIAL_NAME ~ " already exists") }
        {% else %}
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=toolhead VALUE="'{TOOLHEAD}'"
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'nozzle_size'"
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=parameters VALUE="{'type': '{printer[\"gcode_macro \" + TOOLHEAD].type}', 'material_name': '{MATERIAL_NAME}', 'nozzle_size': 0.0, 'bed_temp': 0.0, 'extruder_temp': 0.0, 'z_offset': 0.0}"
            _PROMPT_MATERIAL_NOZZLE_SIZE
        {% endif %}
    {% else %}
        {% if MATERIAL_NAME == "" %}
            RESPOND TYPE=error MSG="NAME or MATERIAL_NAME parameter required"
            { action_raise_error("NAME or MATERIAL_NAME parameter required") }
        {% elif MATERIAL_NAME in printer["gcode_macro VARIABLES"].toolheads[TOOLHEAD].materials %}
            RESPOND TYPE=error MSG="Material {MATERIAL_NAME} already exists for {TOOLHEAD}"
            { action_raise_error("Material " ~ MATERIAL_NAME ~ " already exists") }
        {% else %}
            {% set material_data = "[gcode_macro " + MATERIAL_NAME + "]\n" %}
            {% set material_params = {
                "type": printer["gcode_macro " + TOOLHEAD].type,
                "bed_temp": params.BED_TEMP|default(60)|float,
                "extruder_temp": params.EXTRUDER_TEMP|default(200)|float,
                "z_offset": params.Z_OFFSET|default(0.0)|float,
                "nozzle_size": params.NOZZLE_SIZE|default(0.4)|float,
                "load_length": params.LOAD_LENGTH|default(10)|float,
                "load_speed": params.LOAD_SPEED|default(200)|float,
                "load_wait": params.LOAD_WAIT|default(0)|float,
                "purge_length": params.PURGE_LENGTH|default(45)|float,
                "purge_wait": params.PURGE_WAIT|default(0)|float,
                "accel": params.ACCEL|default(5000)|float,
                "square_corner_velocity": params.SQUARE_CORNER_VELOCITY|default(5.0)|float
            } %}
            {% for key, value in material_params.items() %}
                {% set material_data = material_data + "variable_" + key + ": " + value|string + "\n" %}
            {% endfor %}
            {% set material_data = material_data + "gcode:\n  M117 Material " + MATERIAL_NAME + " loaded\n" %}
            RUN_SHELL_COMMAND CMD=append_material PARAMS="material_data='{material_data}'"
            {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
            {% set toolheads = toolheads|merge({TOOLHEAD: toolheads[TOOLHEAD]|merge({"materials": toolheads[TOOLHEAD].materials|merge({MATERIAL_NAME: material_params})})}) %}
            SAVE_VARIABLE VARIABLE=toolheads VALUE="{toolheads}"
            RESPOND TYPE=command MSG="action:notify Material {MATERIAL_NAME} added for {TOOLHEAD}"
        {% endif %}
    {% endif %}

[gcode_macro _PROMPT_MATERIAL]
description: Prompts for MATERIAL_NAME
variable_toolhead: ""
variable_prompt_step: "material_name"
variable_parameters: {}
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Select Material Name"
    RESPOND TYPE=command MSG="action:prompt_text Toolhead: {printer['gcode_macro ADD_MATERIAL'].toolhead}"
    RESPOND TYPE=command MSG="action:prompt_text Note: For custom names, use console or edit materials.cfg"
    RESPOND TYPE=command MSG="action:prompt_button pla_config1|_SET_MATERIAL_PARAM PARAM=material_name VALUE='pla_config1'|primary"
    RESPOND TYPE=command MSG="action:prompt_button abs_config1|_SET_MATERIAL_PARAM PARAM=material_name VALUE='abs_config1'|primary"
    RESPOND TYPE=command MSG="action:prompt_button petg_config1|_SET_MATERIAL_PARAM PARAM=material_name VALUE='petg_config1'|primary"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_MATERIAL|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_MATERIAL_NOZZLE_SIZE]
description: Prompts for material nozzle size
gcode:
    {% set params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set current = params.nozzle_size|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Material Nozzle Size"
    RESPOND TYPE=command MSG="action:prompt_text Nozzle Size: {current} mm"
    RESPOND TYPE=command MSG="action:prompt_button +0.05mm|_SET_MATERIAL_PARAM PARAM=nozzle_size INCREMENT=0.05|primary"
    RESPOND TYPE=command MSG="action:prompt_button +0.5mm|_SET_MATERIAL_PARAM PARAM=nozzle_size INCREMENT=0.5|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.05mm|_SET_MATERIAL_PARAM PARAM=nozzle_size INCREMENT=-0.05|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.5mm|_SET_MATERIAL_PARAM PARAM=nozzle_size INCREMENT=-0.5|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_MATERIAL_PARAM CURRENT=nozzle_size|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_MATERIAL|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_MATERIAL_BED_TEMP]
description: Prompts for material bed temperature
gcode:
    {% set params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set current = params.bed_temp|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Material Bed Temperature"
    RESPOND TYPE=command MSG="action:prompt_text Bed Temp: {current} °C"
    RESPOND TYPE=command MSG="action:prompt_button +1°C|_SET_MATERIAL_PARAM PARAM=bed_temp INCREMENT=1|primary"
    RESPOND TYPE=command MSG="action:prompt_button +5°C|_SET_MATERIAL_PARAM PARAM=bed_temp INCREMENT=5|primary"
    RESPOND TYPE=command MSG="action:prompt_button -1°C|_SET_MATERIAL_PARAM PARAM=bed_temp INCREMENT=-1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -5°C|_SET_MATERIAL_PARAM PARAM=bed_temp INCREMENT=-5|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_MATERIAL_PARAM CURRENT=bed_temp|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_MATERIAL|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_MATERIAL_EXTRUDER_TEMP]
description: Prompts for material extruder temperature
gcode:
    {% set params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set current = params.extruder_temp|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Material Extruder Temperature"
    RESPOND TYPE=command MSG="action:prompt_text Extruder Temp: {current} °C"
    RESPOND TYPE=command MSG="action:prompt_button +1°C|_SET_MATERIAL_PARAM PARAM=extruder_temp INCREMENT=1|primary"
    RESPOND TYPE=command MSG="action:prompt_button +5°C|_SET_MATERIAL_PARAM PARAM=extruder_temp INCREMENT=5|primary"
    RESPOND TYPE=command MSG="action:prompt_button -1°C|_SET_MATERIAL_PARAM PARAM=extruder_temp INCREMENT=-1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -5°C|_SET_MATERIAL_PARAM PARAM=extruder_temp INCREMENT=-5|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_MATERIAL_PARAM CURRENT=extruder_temp|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_MATERIAL|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PROMPT_MATERIAL_Z_OFFSET]
description: Prompts for material z offset
gcode:
    {% set params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set current = params.z_offset|float %}
    RESPOND TYPE=command MSG="action:prompt_begin Adjust Material Z Offset"
    RESPOND TYPE=command MSG="action:prompt_text Z Offset: {current} mm"
    RESPOND TYPE=command MSG="action:prompt_button +0.01mm|_SET_MATERIAL_PARAM PARAM=z_offset INCREMENT=0.01|primary"
    RESPOND TYPE=command MSG="action:prompt_button +0.1mm|_SET_MATERIAL_PARAM PARAM=z_offset INCREMENT=0.1|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.01mm|_SET_MATERIAL_PARAM PARAM=z_offset INCREMENT=-0.01|primary"
    RESPOND TYPE=command MSG="action:prompt_button -0.1mm|_SET_MATERIAL_PARAM PARAM=z_offset INCREMENT=-0.1|primary"
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_NEXT_MATERIAL_PARAM CURRENT=z_offset|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_MATERIAL|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _SET_MATERIAL_PARAM]
description: Stores a material parameter and advances to the next prompt
gcode:
    {% set PARAM = params.PARAM|default("") %}
    {% set VALUE = params.VALUE %}
    {% set INCREMENT = params.INCREMENT|float|default(0) %}
    {% set current_params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set new_value = VALUE %}
    {% if INCREMENT != 0 %}
        {% set current_value = current_params[PARAM]|float %}
        {% set new_value = (current_value + INCREMENT)|float %}
        {% if new_value < 0 %}
            {% set new_value = 0.0 %}
            RESPOND TYPE=command MSG="action:notify {PARAM} cannot be negative"
        {% endif %}
    {% endif %}
    {% set updated_params = current_params|merge({PARAM: new_value}) %}
    SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=parameters VALUE="{updated_params}"
    {% set current_step = printer["gcode_macro ADD_MATERIAL"].prompt_step %}
    {% if current_step == "material_name" %}
        {% if new_value in printer["gcode_macro VARIABLES"].toolheads[printer["gcode_macro ADD_MATERIAL"].toolhead].materials %}
            RESPOND TYPE=command MSG="action:notify Material {new_value} already exists"
            _PROMPT_MATERIAL
        {% else %}
            SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'nozzle_size'"
            _PROMPT_MATERIAL_NOZZLE_SIZE
        {% endif %}
    {% elif current_step == "nozzle_size" %}
        _PROMPT_MATERIAL_NOZZLE_SIZE
    {% elif current_step == "bed_temp" %}
        _PROMPT_MATERIAL_BED_TEMP
    {% elif current_step == "extruder_temp" %}
        _PROMPT_MATERIAL_EXTRUDER_TEMP
    {% elif current_step == "z_offset" %}
        _PROMPT_MATERIAL_Z_OFFSET
    {% endif %}

[gcode_macro _NEXT_MATERIAL_PARAM]
description: Advances to the next material parameter prompt
gcode:
    {% set CURRENT = params.CURRENT|default("") %}
    {% if CURRENT == "material_name" %}
        SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'nozzle_size'"
        _PROMPT_MATERIAL_NOZZLE_SIZE
    {% elif CURRENT == "nozzle_size" %}
        SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'bed_temp'"
        _PROMPT_MATERIAL_BED_TEMP
    {% elif CURRENT == "bed_temp" %}
        SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'extruder_temp'"
        _PROMPT_MATERIAL_EXTRUDER_TEMP
    {% elif CURRENT == "extruder_temp" %}
        SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'z_offset'"
        _PROMPT_MATERIAL_Z_OFFSET
    {% elif CURRENT == "z_offset" %}
        SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'confirm'"
        _CONFIRM_MATERIAL
    {% endif %}

[gcode_macro _CONFIRM_MATERIAL]
description: Displays confirmation popup for material configuration
gcode:
    {% set toolhead = printer["gcode_macro ADD_MATERIAL"].toolhead %}
    {% set params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set material_name = params.material_name|default("unnamed") %}
    RESPOND TYPE=command MSG="action:prompt_begin Confirm Material Configuration"
    RESPOND TYPE=command MSG="action:prompt_text Toolhead: {toolhead}"
    RESPOND TYPE=command MSG="action:prompt_text Material Name: {material_name}"
    {% for key, value in params.items() %}
        {% if key != "material_name" %}
            RESPOND TYPE=command MSG="action:prompt_text {key}: {value}"
        {% endif %}
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button Proceed|_SAVE_MATERIAL_CONFIG|success"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|_CANCEL_MATERIAL|danger"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _SAVE_MATERIAL_CONFIG]
description: Saves the material config as a gcode_macro
gcode:
    {% set toolhead = printer["gcode_macro ADD_MATERIAL"].toolhead %}
    {% set params = printer["gcode_macro ADD_MATERIAL"].parameters %}
    {% set material_name = params.material_name|default("unnamed") %}
    {% set material_data = "[gcode_macro " + material_name + "]\n" %}
    {% set material_params = {
        "type": params.type|default(printer["gcode_macro " + toolhead].type),
        "bed_temp": params.bed_temp|default(60)|float,
        "extruder_temp": params.extruder_temp|default(200)|float,
        "z_offset": params.z_offset|default(0.0)|float,
        "nozzle_size": params.nozzle_size|default(0.4)|float,
        "load_length": 10.0,
        "load_speed": 200.0,
        "load_wait": 0.0,
        "purge_length": 45.0,
        "purge_wait": 0.0,
        "accel": 5000.0,
        "square_corner_velocity": 5.0
    } %}
    {% for key, value in material_params.items() %}
        {% set material_data = material_data + "variable_" + key + ": " + value|string + "\n" %}
    {% endfor %}
    {% set material_data = material_data + "gcode:\n  M117 Material " + material_name + " loaded\n" %}
    RUN_SHELL_COMMAND CMD=append_material PARAMS="material_data='{material_data}'"
    {% set toolheads = printer["gcode_macro VARIABLES"].toolheads %}
    {% set toolheads = toolheads|merge({toolhead: toolheads[toolhead]|merge({"materials": toolheads[toolhead].materials|merge({material_name: material_params})})}) %}
    SAVE_VARIABLE VARIABLE=toolheads VALUE="{toolheads}"
    RESPOND TYPE=command MSG="action:notify Material {material_name} added for {toolhead}"
    _CANCEL_MATERIAL

[gcode_macro _CANCEL_MATERIAL]
description: Cancels material configuration
gcode:
    SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=toolhead VALUE="''"
    SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=prompt_step VALUE="'material_name'"
    SET_GCODE_VARIABLE MACRO=ADD_MATERIAL VARIABLE=parameters VALUE="{}"
    RESPOND TYPE=command MSG="action:notify Material configuration cancelled"

[gcode_macro SET_MATERIAL]
gcode:
    {% set TOOLHEAD = params.TOOLHEAD|default("") %}
    {% set MATERIAL_NAME = params.NAME|default(params.MATERIAL_NAME|default("")) %}
    {% if TOOLHEAD == "" or TOOLHEAD not in printer["gcode_macro VARIABLES"].toolheads %}
        RESPOND TYPE=error MSG="Valid TOOLHEAD parameter required"
        { action_raise_error("Valid TOOLHEAD parameter required") }
    {% elif MATERIAL_NAME == "" %}
        RESPOND TYPE=error MSG="NAME or MATERIAL_NAME parameter required"
        { action_raise_error("NAME or MATERIAL_NAME parameter required") }
    {% elif MATERIAL_NAME not in printer["gcode_macro VARIABLES"].toolheads[TOOLHEAD].materials %}
        RESPOND TYPE=error MSG="Material {MATERIAL_NAME} not found for {TOOLHEAD}"
        { action_raise_error("Material " ~ MATERIAL_NAME ~ " not found") }
    {% elif printer["gcode_macro " + MATERIAL_NAME].type != printer["gcode_macro " + TOOLHEAD].type %}
        RESPOND TYPE=error MSG="Material {MATERIAL_NAME} type {printer['gcode_macro ' + MATERIAL_NAME].type} does not match toolhead type {printer['gcode_macro ' + TOOLHEAD].type}"
        { action_raise_error("Material type mismatch") }
    {% else %}
        {% set material = printer["gcode_macro " + MATERIAL_NAME] %}
        M117 Setting material {MATERIAL_NAME} for {TOOLHEAD}
        # Apply settings, e.g., M104 S{material.extruder_temp}
    {% endif %}